---
- name: Permissions for mongo
  become: yes
  file:
    state: directory
    mode: 0777
    path: /var/log/mongodb

- name: Make docker network for newsblurnet
  become: yes
  docker_network:
    name: newsblurnet
  notify: restart docker

- name: Start db-mongo docker container
  become: yes
  docker_container:
    name: mongo
    image: mongo:3.6
    state: started
    container_default_behavior: no_defaults
    restart_policy: unless-stopped
    networks_cli_compatible: yes
    network_mode: default
    networks:
      - name: newsblurnet
    ports:
      - "27017:27017"
    command: --config /etc/mongod.conf
    volumes:
      - /mnt/{{ inventory_hostname | regex_replace('db-|-', '') }}:/data/db
      - /srv/newsblur/ansible/roles/mongo/templates/mongo.conf:/etc/mongod.conf
      - /var/log/mongodb/:/var/log/mongodb/
      - /opt/mongo/newsblur/backup:/backup/'

- name: Register mongo in consul
  tags: consul
  become: yes
  template:
    src: consul_service.json
    dest: /etc/consul.d/mongo.json
  when: (inventory_hostname | regex_replace('[0-9]+', '')) in ['db-mongo', 'db-mongo-secondary'] or inventory_hostname.startswith('db2')
  notify:
    - reload consul

- name: Register mongo-analytics in consul
  tags: consul
  become: yes
  template:
    src: consul_service.analytics.json
    dest: /etc/consul.d/mongo.json
  when: (inventory_hostname | regex_replace('[0-9]+', '')) == 'db-mongo-analytics' or inventory_hostname.startswith('db3')
  notify:
    - reload consul

- name: Setup logrotate for mongo
  become: yes
  copy: src=logrotate.conf dest=/etc/logrotate.d/mongodb mode=0755
  tags: 
    - logrotate
  
- name: Add sanity checkers cronjob for disk usage
  become: yes
  cron:
    name: disk_usage_sanity_checker
    user: root
    cron_file: /etc/cron.hourly/disk_usage_sanity_checker
    job: >-
      docker pull newsblur/newsblur_python3:latest;
      docker run --rm -it
      OUTPUT=$(eval sudo df / | head -n 2 |  tail -1);
      -v /srv/newsblur:/srv/newsblur
      --network=newsblurnet
      --hostname {{ ansible_hostname }} 
      newsblur/newsblur_python3 /srv/newsblur/utils/monitor_disk_usage.py $OUTPUT
  tags:
    - sanity-checker

- name: Add mongo backup
  cron:
    name: mongo backup
    minute: "0"
    hour: "4"
    job:
      collections=(
        classifier_tag
        classifier_author
        classifier_feed
        classifier_title
        userstories
        shared_stories
        category
        category_site
        sent_emails
        social_profile
        social_subscription
        social_services
        statistics
        user_search
        feedback
      )
      for collection in collections; do
        echo Dumping $collection
        now=$(date '+%Y-%m-%d-%H-%M')

        docker exec -it mongo mongodump --db newsblur --collection $collection -o /backup/backup_mongo_${now}
        
        echo Compressing /opt/mongo/newsblur/backup/backup_mongo_${now}.tgz
        tar -zcf /opt/mongo/newsblur/backup/backup_mongo_${now}.tgz /opt/mongo/newsblur/backup/backup_mongo_${now})
        
      done;

      echo Uploading backups to S3      
      docker run --rm
      -v /srv/newsblur:/srv/newsblur
      -v /opt/mongo/newsblur/backup/:/opt/mongo/newsblur/backup/
      --network=newsblurnet
      newsblur/newsblur_python3:latest /srv/newsblur/utils/backups/backup_mongo.py
