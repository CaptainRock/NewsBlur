---
- name: Start postgres container
  become: yes
  docker_container:
    name: postgres
    image: postgres:13.1
    state: started
    hostname: postgres
    env:
      POSTGRES_USER: newsblur
      POSTGRES_PASSWORD: newsblur
    restart_policy: unless-stopped
    ports:
    - '5432:5432'
    volumes:
    - /srv/newsblur/docker/volumes/postgres:/var/lib/postgresql/data
    - /backup/:/var/lib/postgresql/backup/

- name: Register postgres in consul
  tags: consul
  become: yes
  template:
    src: consul_service.json
    dest: /etc/consul.d/postgres.json
  notify:
    - reload consul

- name: Register backup bucket
  become: no
  run_once: yes
  register: backup_bucket
  local_action: command /srv/newsblur/ansible/roles/postgres-exporter/tasks/get_credentials.py s3_bucket

- name: Add sanity checkers cronjob for disk usage
  become: yes
  cron:
    name: disk_usage_sanity_checker
    user: root
    cron_file: /etc/cron.hourly/disk_usage_sanity_checker
    job: >-
      docker pull newsblur/newsblur_python3:latest;
      docker run --rm -it
      OUTPUT=$(eval sudo df / | head -n 2 |  tail -1);
      -v /srv/newsblur:/srv/newsblur
      --network=newsblurnet
      --hostname {{ ansible_hostname }} 
      newsblur/newsblur_python3 /srv/newsblur/utils/monitor_disk_usage.py $OUTPUT

- name: Add postgres backup
  cron:
    name: postgres backup
    minute: "0"
    hour: "4"
    job: >-
      NOW=$(eval date +%F-%H-%M);
      BACKUP_FILE=backup_postgresql_${NOW}.sql;
      sudo docker exec -it postgres
      /usr/lib/postgresql/13/bin/pg_dump -U newsblur -h 127.0.0.1 -Fc newsblur > backup/$BACKUP_FILE;
      BUCKET={{ backup_bucket.stdout }};
      sudo docker run --rm -it
      -v /srv/newsblur:/srv/newsblur
      -v /backup/:/backup/
      --network=newsblurnet
      newsblur/newsblur_python3
      /srv/newsblur/utils/backups/backup_psql.py $BUCKET